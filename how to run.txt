sudo apt install build-essential libssl-dev libsqlite3-dev openssl


To successfully run this `Makefile` and build your ByteFlow-FTP project on **Ubuntu Linux**, you'll need to install the necessary development tools and libraries first.

---

## ✅ Required Tools & Libraries

### 🧰 1. Install Build Tools

```bash
sudo apt update
sudo apt install build-essential
```

This includes `gcc`, `make`, and other essential compilation tools.

---

### 🔐 2. Install OpenSSL Development Libraries

```bash
sudo apt install libssl-dev
```

Required for `-lssl -lcrypto` and `openssl` CLI commands.

---

### 🧵 3. Install POSIX Threads Library (comes with `glibc`)

This is **usually already present**, but to be sure:

```bash
sudo apt install libc6-dev
```

(It's included in `build-essential`, so you’re likely covered.)

---

### 🗄️ 4. Install SQLite Development Library

```bash
sudo apt install libsqlite3-dev
```

Needed for `-lsqlite3` and database operations.

---

### 📜 5. Optional: Check `openssl` CLI availability

To run the `make cert` rule:

```bash
openssl version
```

If not found:

```bash
sudo apt install openssl
```

---

## ✅ Summary Checklist

You need to install:

```bash
sudo apt install build-essential libssl-dev libsqlite3-dev openssl
```

---

Once that's done, you're good to go with:

```bash
make all
make cert      # optional, to create SSL certs
./init_db      # initialize the SQLite user DB
./server       # run the server
./client       # run the client
```

Let me know if you want a full step-by-step usage flow next!